#include <bits/stdc++.h>
using namespace std;

#define endl '\n'
#define f first
#define s second
#define pb push_back

//https://cses.fi/problemset/task/1619
int32_t main() {
  #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
  #endif
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int n;
  cin >> n;

  vector<pair<int, int>> v;  // рж▓рзЗржлржЯ-рж░рж╛ржЗржЯ ржкрзЯрзЗржирзНржЯ рж╕рзНржЯрзЛрж░ ржХрж░рж╛рж░ ржЬржирзНржп

  set<int> st;  // ржЗржЙржирж┐ржХ ржкрзЯрзЗржирзНржЯ рж╕ржВрж░ржХрзНрж╖ржг (Coordinate Compression ржПрж░ ржЬржирзНржп)

  // ЁЯФ╣ ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛ ржПржмржВ ржЗржЙржирж┐ржХ ржкрзЯрзЗржирзНржЯ рж╕ржВржЧрзНрж░рж╣ ржХрж░рж╛
  for (int i = 0; i < n; i++) {
    int l, r;
    cin >> l >> r;
    v.pb({l, r});
    st.insert(l);
    st.insert(r);
  }

  // ЁЯФ╣ Coordinate Compression: ржЫрзЛржЯ ржЗржиржбрзЗржХрзНрж╕рзЗ ржорзНржпрж╛ржк ржХрж░рж╛
  map<int, int> mp;
  int cnt = 1;

  for (auto u : st) {
    mp[u] = cnt++;  // ржкрзНрж░рждрж┐ржЯрж┐ ржЗржЙржирж┐ржХ ржнрзНржпрж╛рж▓рзБржХрзЗ ржЫрзЛржЯ рж╕ржВржЦрзНржпрж╛ ржжрж┐рзЯрзЗ рж░рж┐ржкрзНрж▓рзЗрж╕ ржХрж░ржЫрж┐
  }

  // ЁЯФ╣ ржЖржкржбрзЗржЯ ржХрж░рж╛ ржирждрзБржи ржХржоржкрзНрж░рзЗрж╕ржб ржЗржиржбрзЗржХрзНрж╕ ржжрж┐рзЯрзЗ
  for (int i = 0; i < v.size(); i++) {
    v[i].first = mp[v[i].first];  // ржирждрзБржи ржЗржиржбрзЗржХрзНрж╕ ржжрзЗржУрзЯрж╛
    v[i].second = mp[v[i].second];
  }

  int arr[2 * n + 4] = {0};  // ЁЯФ╣ Difference Array

  // ЁЯФ╣ рж▓рзЗржлржЯ ржкрзЯрзЗржирзНржЯрзЗ +1, рж░рж╛ржЗржЯ ржкрзЯрзЗржирзНржЯрзЗ -1
  for (auto u : v) {
    arr[u.first]++;    // ржЗржнрзЗржирзНржЯ рж╢рзБрж░рзБ рж╣рж▓рзЗ +1
    arr[u.second]--;   // ржЗржнрзЗржирзНржЯ рж╢рзЗрж╖ рж╣рж▓рзЗ -1
  }

  int mx = 0;

  // ЁЯФ╣ Prefix Sum ржирж┐рзЯрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ ржУржнрж╛рж░рж▓рзНржпрж╛ржк ржЦрзБржБржЬржЫрж┐
  for (int i = 1; i <= 2 * n; i++) {
    arr[i] += arr[i - 1];  // Prefix Sum
    mx = max(mx, arr[i]);  // рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржи ржЖржкржбрзЗржЯ ржХрж░ржЫрж┐
  }

  cout << mx << endl;  // ЁЯФ╣ рж╕рж░рзНржмрзЛржЪрзНржЪ ржХрждржЧрзБрж▓рзЛ ржЗржнрзЗржирзНржЯ ржПржХрж╕рж╛ржерзЗ ржЪрж▓ржЫрзЗ рж╕рзЗржЯрж╛ ржкрзНрж░рж┐ржирзНржЯ

  

  return 0;
}